> akka-http-scalajs/clean

$ exec chmod +x countScalaAndSourceMapFiles.sh

# archive using default FastOptStage should contain source map files (.map)
# - 3 Scala files: 1 from firstClient, 1 from secondClient, 1 from sharedJs
# - 2 source map files: 1 from firstClient, 1 from secondClient
> universal:packageBin
$ exec ./countScalaAndSourceMapFiles.sh 3 2

> reload
# cleaning needed, otherwise source map files are not generated
> akka-http-scalajs/clean

# archive using FullOptStage should contain source map files by default
> set scalaJSStage in Global := FullOptStage
> universal:packageBin
$ exec ./countScalaAndSourceMapFiles.sh 3 2

> reload
> akka-http-scalajs/clean

# archive using FullOptStage, with source map config set to false, should contain no source map files
> set scalaJSStage in Global := FullOptStage
> set scalaJSLinkerConfig in (firstClient, Compile, fullOptJS) ~= (_.withSourceMap(false))
> set scalaJSLinkerConfig in (secondClient, Compile, fullOptJS) ~= (_.withSourceMap(false))
> universal:packageBin
$ exec ./countScalaAndSourceMapFiles.sh 0 0

> reload
> akka-http-scalajs/clean

# archive using FullOptStage, with only one project's source map config set to true, should contain one source map file
> set scalaJSStage in Global := FullOptStage
> set scalaJSLinkerConfig in (secondClient, Compile, fullOptJS) ~= (_.withSourceMap(false))
> universal:packageBin
$ exec ./countScalaAndSourceMapFiles.sh 2 1
